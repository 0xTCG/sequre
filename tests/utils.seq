import time
from sequre.utils.param import NBIT_F


def assert_values(name, result, expected):
    assert result == expected, f'{name} failed! Result: {result}.\n\nExpected: {expected}'
    print(f'{name} passed.')


def assert_approx(name, result, expected, error: float = 0.018):
    # Scale error with the fractional size precision
    error += 1.0 / NBIT_F
    
    check: bool = ((expected - error) < result) and (result < (expected + error))
    assert check, f'{name} failed! Result: {result}.\n\nExpected: {expected}'
    print(f'{name} passed.')


def time_frame(mpc, func, name, *args):
    s = time.time()
    mpc.reset_stats()
    func(mpc, *args)
    e = time.time()
    print(f'{name} done in {e - s}s at {mpc.pid}')
    mpc.print_stats()
    mpc.comms.sync_parties()
