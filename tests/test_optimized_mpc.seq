from utils import assert_values, assert_approx 

from ..utils.param import *
from ..utils.type_ops import TypeOps
from ..utils.custom_types import SecureValue
from ..mpc.env import MPCEnv
from ..stdlib.lin_alg import *


def test_optimized_mpc[TP](mpc: MPCEnv[TP]):
    a_vec = [
        TypeOps.double_to_fp(1.5, NBIT_K, NBIT_F),
        TypeOps.double_to_fp(0.5, NBIT_K, NBIT_F),
        TypeOps.double_to_fp(2.5, NBIT_K, NBIT_F)]
    sv = SecureValue[list[size_u]](a_vec)
    sv.fp = True
    v = householder(mpc, sv)
    float_v = mpc.fp.print_fp([v.share])
    if mpc.pid != 0:
        assert_approx('Householder', float_v, [[0.86807, 0.0973601, 0.486801]])

    print(f'Optimized MPC tests passed at {mpc.pid}!')
