from ..utils import assert_values

from sequre.utils.param import *
from sequre.mpc.env import MPCEnv
from .. import opal_protocol


def test_opal[TP](mpc: MPCEnv[TP], modulus: TP):
    with open('tests/data/output/opal.txt') as f:
        result, dico = opal_protocol(mpc, True, modulus)
        expected_output = [int(dico[int(e.strip())]) for e in f]

        positives = [int(e > 0) for e in mpc.comms.print_fp(result, modulus)]
        pred = [(e * 2 - 1) for e in positives]
        true_positives = positives.numpy_eq(expected_output)
        accuracy = pred.numpy_eq(expected_output).mean()
        precision = true_positives.sum() / positives.sum()
        recall = true_positives.sum() / [int(e == 1) for e in expected_output].sum()
        print(f'Accuracy: {accuracy}. Precision: {precision}. Recall: {recall}')

    print(f'Opal ({"ring" if modulus.popcnt() == 1 else "field"}) passed at {mpc.pid}!\n')
