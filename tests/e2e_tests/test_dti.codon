from sequre.utils.testing import assert_geq 
from sequre.utils.param import *
from sequre.mpc.env import MPCEnv
from .. import dti_mpc_protocol


def test_dti[TP](mpc: MPCEnv[TP], modulus: TP):
    print(f'CP{mpc.pid}:\tTesting Sequre DTI on {"ring" if modulus.popcnt() == 1 else "field"} ... \n')
    
    with open('tests/data/dti/input/test_labels.txt') as f:
        expected_predictions = [[float(e.strip()) for e in row.split(' ')] for row in f]
        predictions = mpc.comms.print_fp(dti_mpc_protocol(mpc, True, modulus, True).share, modulus)

        labeled_predictions = [(1.0 if e[0] > 0 else 0.0) for e in predictions]
        accuracy = [int(l == t[0]) for l, t in zip(labeled_predictions, expected_predictions)]
        print(f'Sequre-DTI accuracy: {accuracy.mean()}')

        if mpc.pid:
            assert_geq(f'Sequre DTI ({"ring" if modulus.popcnt() == 1 else "field"}) failed', accuracy.mean(), 0.8)

    print(f'CP{mpc.pid}:\tSequre DTI on {"ring" if modulus.popcnt() == 1 else "field"} tests passed.\n')
