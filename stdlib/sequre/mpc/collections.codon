from ..utils.param import *


def oblivious_get(mpc, secret_keys, key_bit_len, public_array, delimiter_prime, modulus):
    bits = mpc.boolean.bit_decomposition(secret_keys, key_bit_len, delimiter_prime, modulus)# , key_bit_len, delimiter_prime, modulus)
    
    demux = mpc.boolean.demultiplexer(bits, delimiter_prime)
    _, demux_len = demux.shape  

    if DEBUG:
        assert len(public_array) <= demux_len, "Size of demultiplexer does not match the length of array. Adjust 'key_bit_len' so that the length of public array is less or equal than 2^key_bit_len."
    
    public_array = public_array.pad_vec(demux_len)
    return demux.matmul_mod([public_array].transpose(), delimiter_prime)
