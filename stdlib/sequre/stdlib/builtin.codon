from ..attributes import sequre
from ..types.sharetensor import Sharetensor as Stensor


@sequre
def maximum(mpc, x, y):
    mask = ((x - y) > 0).astype(float)
    return x * mask - y * (mask - 1)


@sequre
def minimum(mpc, x, y):
    mask = ((y - x) > 0).astype(float)
    return x * mask - y * (mask - 1)


@sequre
def abs(mpc, x):
    return x * (((x > 0) * 2) - 1)


@sequre
def argmax(mpc, x):
    arg, maximum = Stensor(0, x.modulus), x[0]

    for i in range(1, len(x)):
        new_maximum = max(mpc, maximum, x[i])
        arg = max(mpc, arg, (new_maximum > maximum) * i)
        maximum = new_maximum
    
    return arg, maximum
