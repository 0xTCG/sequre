from experimental.simd import Vec


# Access patterns
C_CONTIG: str = "c_contig"
D_CONTIG: str = "d_contig"

# SIMD
SIMD_LANE_SIZE: Static[int] = 8
_MM_0F_u128xN: Vec[u128, SIMD_LANE_SIZE] = Vec[u64, SIMD_LANE_SIZE](u64(0xffffffffffffffff)).zext_double()

# PAR
NUM_THREADS: Static[int] = 2
assert NUM_THREADS <= 2, "For fair testing, only hyperthreading is allowed in pre-alpha."

# HE
HE_MUL_COST_ESTIMATE: float = 0.0015622
HE_MUL_RELIN_COST_ESTIMATE: float = 0.0489047
HE_ROT_COST_ESTIMATE: float = 0.0451602
HE_ENC_COST_ESTIMATE: float = 0.0097378
HE_DEC_COST_ESTIMATE: float = 0.01626

# MHE
MHE_MUL_TO_ADD_THRESHOLD: Static[int] = 7
MHE_MPC_SWITCH_COST_ESTIMATE: float = HE_ENC_COST_ESTIMATE + HE_DEC_COST_ESTIMATE

# MISC
SMALL_CYCLES_INSTR_COST_ESTIMATE: float = 1e-09

# Run-script flags/toggles
@tuple
class _RUN_TOGGLES:
    RUN_ALL_FLAG: str = "--all"
    UNIT_TEST_FLAG: str = "--unit"
    E2E_TEST_FLAG: str = "--e2e"

    HELPERS_TEST_FLAG: str = "--helpers"
    PRIMITIVES_TEST_FLAG: str = "--primitives"
    HE_TEST_FLAG: str = "--he"
    MPC_TEST_FLAG: str = "--mpc"
    SHARETENSOR_TEST_FLAG: str = "--sharetensor"
    CIPHERTENSOR_TEST_FLAG: str = "--ciphertensor"
    MPP_TEST_FLAG: str = "--mpp"
    IR_PASSES_TEST_FLAG: str = "--ir-passes"

    PLAYGROUND_FLAG: str = "--playground"
    LATTISEQ_FLAG: str = "--lattiseq"
    LATTISEQ_MULT3_FLAG: str = "--lattiseq-mult3"
    LIN_ALG_FLAG: str = "--lin-alg"
    LIN_REG_FLAG: str = "--lin-reg"
    LSVM_FLAG: str = "--lsvm"
    PCA_FLAG: str = "--pca"
    KING_FLAG: str = "--king"
    GWAS_FLAG: str = "--gwas"
    DTI_FLAG: str = "--dti"
    OPAL_FLAG: str = "--opal"
    GANON_FLAG: str = "--ganon"

    DATA_SHARING_SKIP_FLAG: str = "--skip-data-sharing"
    MHE_SETUP_SKIP_FLAG: str = "--skip-mhe-setup"
    USE_RING_FLAG: str = "--use-ring"
    LOCAL_SETUP_FLAG: str = "--local"

    def __init__(self):
        self._check_validity()
    
    def _check_validity(self):
        assert len(list(self)) == len(set(self)), "All flags in _RUN_TOGGLES should be different"

RUN_TOGGLES = _RUN_TOGGLES()
