import math, prg, time


# AllDistinct returns true if all elements in s are distinct, and false otherwise.
def all_distinct(s):
    m = set()
    for si in s:
        if si in m: return False
        m.add(si)

    return True


def is_prime[T](n: T):
    if n <= T(3):
        return n > T(1)
    if n.__naive_mod(T(2)) == T(0) or n.__naive_mod(T(3)) == 0:
        return False

    limit = int(math.sqrt(float(n))) + 1
    
    for i in range(5, limit, 6):
        if n.__naive_mod(T(i)) == T(0) or n.__naive_mod(T(i + 2)) == T(0):
            return False
    
    return True


def new_keyed_prng(seed: u32 = u32(0)):
    prng = prg.Random(prg.RandomGenerator())
    prng.gen.init_genrand(seed)
    return prng


def new_prng(seed: u32 = u32(0)):
    if seed == u32(0): seed = u32(int(time.time()))
    return new_keyed_prng(seed)
