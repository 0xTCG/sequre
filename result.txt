------------------------ 5x5 --------------------------------

ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001  144.793  144.793 mpc.py:1413(eigen_decomp)
       53    0.002    0.000  139.415    2.630 mpc.py:1129(householder)
      106    0.015    0.000  136.324    1.286 mpc.py:1045(fp_sqrt)
       20    0.002    0.000  134.831    6.742 mpc.py:1285(qr_fact_square)
   330621   49.434    0.000  133.950    0.000 custom_types.py:17(mul_mod)
      106    0.024    0.000  122.054    1.151 mpc.py:894(normalizer_even_exp)
     1590    0.003    0.000  117.304    0.074 mpc.py:409(evaluate_poly)
     1590    0.651    0.000  115.797    0.073 mpc.py:324(powers)
      159    0.000    0.000  108.623    0.683 mpc.py:525(table_lookup)
 18264448    7.131    0.000   39.124    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
 17998156   38.624    0.000   38.624    0.000 custom_types.py:14(add_mod)
  9126615    3.228    0.000   35.998    0.000 <__array_function__ internals>:2(any)
  9126615    4.297    0.000   29.319    0.000 fromnumeric.py:2249(any)
  9137632    7.268    0.000   25.135    0.000 fromnumeric.py:70(_wrapreduction)
     4740    0.021    0.000   16.012    0.003 mpc.py:426(beaver_mult)
  9137632   14.934    0.000   14.934    0.000 {method 'reduce' of 'numpy.ufunc' objects}
      477    0.119    0.000   14.559    0.031 mpc.py:668(prefix_or)
     1938    0.017    0.000   11.837    0.006 mpc.py:639(mult_aux_parallel)
     4074    0.243    0.000   10.536    0.003 custom_types.py:32(matmul_mod)
     1938    0.003    0.000   10.003    0.005 mpc.py:659(<listcomp>)
     1431    0.043    0.000    8.726    0.006 mpc.py:594(fan_in_or)
      265    0.018    0.000    8.535    0.032 mpc.py:992(less_than_bits_aux)
        1    0.000    0.000    8.441    8.441 mpc.py:1344(tridiag)
  8795994    2.876    0.000    7.936    0.000 <__array_function__ internals>:2(where)
     3309    0.033    0.000    7.777    0.002 mpc.py:537(trunc)
     1818    0.004    0.000    7.197    0.004 mpc.py:469(multiply)
     1090    0.002    0.000    7.141    0.007 mpc.py:664(mult_mat_parallel)
    14485    0.038    0.000    6.209    0.000 mpc.py:246(reveal_sym)
    25896    0.013    0.000    5.814    0.000 mpc.py:230(receive_ndarray)
    27804    0.051    0.000    5.582    0.000 c_socket.py:54(receive)
    27804    5.506    0.000    5.506    0.000 {method 'recv' of '_socket.socket' objects}
      159    0.000    0.000    4.938    0.031 mpc.py:853(less_than_bits_public)
    22557    0.170    0.000    4.467    0.000 mpc.py:220(receive_matrix)
    11017    0.101    0.000    4.316    0.000 mpc.py:272(beaver_partition)
      106    0.000    0.000    3.598    0.034 mpc.py:989(less_than_bits)
   330621    0.132    0.000    2.974    0.000 <__array_function__ internals>:2(broadcast_to)
   330621    0.131    0.000    2.548    0.000 stride_tricks.py:141(broadcast_to)
   330621    1.684    0.000    2.417    0.000 stride_tricks.py:114(_broadcast_to)
       53    0.001    0.000    2.348    0.044 mpc.py:1183(is_positive)
  9137632    2.107    0.000    2.107    0.000 fromnumeric.py:71(<dictcomp>)
     3876    0.006    0.000    1.749    0.000 mpc.py:628(beaver_partition_bulk)
     3876    0.004    0.000    1.741    0.000 mpc.py:630(<listcomp>)
     5141    0.023    0.000    1.364    0.000 mpc.py:212(receive_vector)
    22034    1.041    0.000    1.041    0.000 {method 'set_state' of 'numpy.random.mtrand.RandomState' objects}
  9126615    0.843    0.000    0.843    0.000 fromnumeric.py:2245(_any_dispatcher)
    11017    0.021    0.000    0.837    0.000 mpc.py:264(switch_seed)
  9137632    0.818    0.000    0.818    0.000 {method 'items' of 'dict' objects}
    11017    0.016    0.000    0.810    0.000 mpc.py:268(restore_seed)
  8795994    0.801    0.000    0.801    0.000 multiarray.py:311(where)
    70525    0.222    0.000    0.756    0.000 {built-in method _functools.reduce}
    22034    0.569    0.000    0.569    0.000 {method 'get_state' of 'numpy.random.mtrand.RandomState' objects}
    14485    0.019    0.000    0.371    0.000 mpc.py:206(send_elem)

------------------------ 15x15 --------------------------------

ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.002    0.002 1701.857 1701.857 mpc.py:1416(eigen_decomp)
       70    0.017    0.000 1616.000   23.086 mpc.py:1288(qr_fact_square)
  3525841  560.465    0.000 1537.228    0.000 custom_types.py:17(mul_mod)
      538    0.022    0.000 1437.318    2.672 mpc.py:1130(householder)
     1076    0.144    0.000 1405.333    1.306 mpc.py:1045(fp_sqrt)
     1076    0.247    0.000 1256.838    1.168 mpc.py:894(normalizer_even_exp)
    16140    0.035    0.000 1207.608    0.075 mpc.py:409(evaluate_poly)
    16140    6.277    0.000 1192.185    0.074 mpc.py:324(powers)
     1614    0.003    0.000 1117.738    0.693 mpc.py:525(table_lookup)
205438723  454.005    0.000  454.005    0.000 custom_types.py:14(add_mod)
207089790   80.649    0.000  446.795    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
103488251   36.710    0.000  413.476    0.000 <__array_function__ internals>:2(any)
103488251   46.924    0.000  337.342    0.000 fromnumeric.py:2249(any)
    47965    0.209    0.000  327.302    0.007 mpc.py:426(beaver_mult)
103599783   87.801    0.000  291.604    0.000 fromnumeric.py:70(_wrapreduction)
    41054    2.978    0.000  270.807    0.007 custom_types.py:32(matmul_mod)
    19823    0.179    0.000  213.382    0.011 mpc.py:639(mult_aux_parallel)
    19823    0.028    0.000  193.733    0.010 mpc.py:659(<listcomp>)
103599783  173.595    0.000  173.595    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    11215    0.019    0.000  165.085    0.015 mpc.py:664(mult_mat_parallel)
     4842    1.192    0.000  150.033    0.031 mpc.py:668(prefix_or)
    18003    0.046    0.000  145.913    0.008 mpc.py:469(multiply)
    33439    0.340    0.000  128.000    0.004 mpc.py:537(trunc)
   146585    0.391    0.000  113.479    0.001 mpc.py:246(reveal_sym)
   261966    0.133    0.000  109.183    0.000 mpc.py:230(receive_ndarray)
   281334    0.524    0.000  106.558    0.000 c_socket.py:54(receive)
   283418  105.777    0.000  105.777    0.000 {method 'recv' of '_socket.socket' objects}
   228072    1.891    0.000   94.066    0.000 mpc.py:220(receive_matrix)
 99962410   32.617    0.000   90.326    0.000 <__array_function__ internals>:2(where)
    14526    0.428    0.000   90.304    0.006 mpc.py:594(fan_in_or)
     2690    0.177    0.000   87.856    0.033 mpc.py:992(less_than_bits_aux)
     1614    0.003    0.000   50.609    0.031 mpc.py:853(less_than_bits_public)
        1    0.001    0.001   47.673   47.673 mpc.py:1347(tridiag)
   111532    1.061    0.000   46.201    0.000 mpc.py:272(beaver_partition)
     1076    0.002    0.000   37.252    0.035 mpc.py:989(less_than_bits)
  3525841    1.489    0.000   32.122    0.000 <__array_function__ internals>:2(broadcast_to)
  3525841    1.332    0.000   27.484    0.000 stride_tricks.py:141(broadcast_to)
  3525841   18.190    0.000   26.152    0.000 stride_tricks.py:114(_broadcast_to)
      538    0.014    0.000   24.187    0.045 mpc.py:1186(is_positive)
103599783   21.092    0.000   21.092    0.000 fromnumeric.py:71(<dictcomp>)
    39646    0.062    0.000   18.740    0.000 mpc.py:628(beaver_partition_bulk)
    39646    0.041    0.000   18.657    0.000 mpc.py:630(<listcomp>)
    52186    0.241    0.000   15.244    0.000 mpc.py:212(receive_vector)
   885790    3.194    0.000   11.331    0.000 {built-in method _functools.reduce}
   223064   10.545    0.000   10.545    0.000 {method 'set_state' of 'numpy.random.mtrand.RandomState' objects}
103488251    9.729    0.000    9.729    0.000 fromnumeric.py:2245(_any_dispatcher)
 99962410    9.572    0.000    9.572    0.000 multiarray.py:311(where)
103599783    9.038    0.000    9.038    0.000 {method 'items' of 'dict' objects}
   111532    0.192    0.000    8.448    0.000 mpc.py:264(switch_seed)
   111532    0.164    0.000    8.202    0.000 mpc.py:268(restore_seed)
   223064    5.750    0.000    5.750    0.000 {method 'get_state' of 'numpy.random.mtrand.RandomState' objects}
   146585    0.179    0.000    4.111    0.000 mpc.py:206(send_elem)
  4428311    3.210    0.000    3.210    0.000 {built-in method numpy.array}
1456224/146585    1.951    0.000    3.184    0.000 custom_types.py:108(to_bytes)
382441/145509    0.987    0.000    2.965    0.000 custom_types.py:120(<listcomp>)
  3525841    1.617    0.000    2.659    0.000 {built-in method builtins.any}
   111532    0.049    0.000    2.411    0.000 custom_types.py:11(random_ndarray)
   111532    0.891    0.000    2.363    0.000 {method 'randint' of 'numpy.random.mtrand.RandomState' objects}
  3525841    1.252    0.000    1.951    0.000 function_base.py:244(iterable)
   111532    0.078    0.000    1.472    0.000 <__array_function__ internals>:2(prod)
   111532    0.115    0.000    1.300    0.000 fromnumeric.py:2881(prod)
    48503    0.089    0.000    1.117    0.000 mpc.py:441(beaver_reconstruct)
  7141613    1.042    0.000    1.042    0.000 stride_tricks.py:119(<genexpr>)
  3202973    0.777    0.000    0.909    0.000 utils.py:27(bytes_to_arr)
  3525841    0.905    0.000    0.905    0.000 stride_tricks.py:24(_maybe_view_as_subclass)
   146585    0.172    0.000    0.748    0.000 c_socket.py:45(send)
    19823    0.014    0.000    0.723    0.000 mpc.py:635(beaver_reconstruct_bulk)
    19823    0.019    0.000    0.709    0.000 mpc.py:637(<listcomp>)
  3527455    0.699    0.000    0.699    0.000 {built-in method builtins.iter}
   146585    0.552    0.000    0.552    0.000 {method 'send' of '_socket.socket' objects}
      538    0.002    0.000    0.522    0.001 mpc.py:1257(beaver_inner_prod)
  3525841    0.409    0.000    0.409    0.000 stride_tricks.py:137(_broadcast_to_dispatcher)
     1076    0.002    0.000    0.386    0.000 mpc.py:209(receive_elem)
   228527    0.152    0.000    0.243    0.000 custom_types.py:95(get_bytes_len)
   809277    0.226    0.000    0.226    0.000 {method 'split' of 'bytes' objects}
  1753422    0.145    0.000    0.145    0.000 {built-in method builtins.len}
  1073783    0.132    0.000    0.132    0.000 {method 'encode' of 'str' objects}
   283418    0.120    0.000    0.120    0.000 {built-in method builtins.min}
   663775    0.087    0.000    0.087    0.000 {method 'join' of 'bytes' objects}
   198399    0.087    0.000    0.087    0.000 custom_types.py:79(get_mat_len)
   111532    0.077    0.000    0.077    0.000 {built-in method builtins.getattr}
     1614    0.051    0.000    0.062    0.000 mpc.py:856(num_to_bits)
   283418    0.055    0.000    0.055    0.000 {method 'append' of 'list' objects}
     1076    0.003    0.000    0.046    0.000 mpc.py:865(share_random_bits)
    16140    0.031    0.000    0.031    0.000 {method 'resize' of 'numpy.ndarray' objects}
     1614    0.002    0.000    0.024    0.000 <__array_function__ internals>:2(expand_dims)
     1614    0.007    0.000    0.019    0.000 shape_base.py:512(expand_dims)
   111532    0.018    0.000    0.018    0.000 fromnumeric.py:2876(_prod_dispatcher)
    48420    0.015    0.000    0.015    0.000 custom_types.py:83(get_vec_len)
    39646    0.014    0.000    0.014    0.000 mpc.py:631(<listcomp>)
    76934    0.011    0.000    0.011    0.000 custom_types.py:75(bit)
    11298    0.010    0.000    0.010    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    16140    0.008    0.000    0.009    0.000 mpc.py:304(get_pascal_matrix)
     1147    0.007    0.000    0.009    0.000 mpc.py:505(double_to_fp)
     4842    0.007    0.000    0.007    0.000 mpc.py:730(<listcomp>)
     4842    0.007    0.000    0.007    0.000 mpc.py:700(<listcomp>)
    39646    0.007    0.000    0.007    0.000 mpc.py:632(<listcomp>)
     1614    0.004    0.000    0.006    0.000 numeric.py:1308(normalize_axis_tuple)
     4842    0.005    0.000    0.005    0.000 mpc.py:711(<listcomp>)
     5918    0.003    0.000    0.003    0.000 {built-in method math.ceil}
     1614    0.001    0.000    0.003    0.000 _asarray.py:86(asanyarray)
     4842    0.003    0.000    0.003    0.000 {built-in method math.sqrt}
     1076    0.002    0.000    0.002    0.000 mpc.py:1096(<listcomp>)
        2    0.000    0.000    0.002    0.001 mpc.py:588(lagrange_interp_simple)
        2    0.001    0.001    0.002    0.001 mpc.py:117(lagrange_interp)
     1614    0.001    0.000    0.002    0.000 numeric.py:1358(<listcomp>)
     1076    0.001    0.000    0.001    0.000 mpc.py:1032(<listcomp>)
     1076    0.001    0.000    0.001    0.000 mpc.py:1043(<listcomp>)
        4    0.001    0.000    0.001    0.000 mpc.py:311(calculate_pascal_matrix)
     1090    0.001    0.000    0.001    0.000 {method 'copy' of 'numpy.ndarray' objects}
     1076    0.001    0.000    0.001    0.000 mpc.py:1033(<listcomp>)
     1076    0.001    0.000    0.001    0.000 {built-in method math.log2}
     1614    0.001    0.000    0.001    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
     1614    0.001    0.000    0.001    0.000 {built-in method builtins.isinstance}
     1614    0.001    0.000    0.001    0.000 shape_base.py:600(<listcomp>)
      140    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(fill_diagonal)
     1147    0.001    0.000    0.001    0.000 custom_types.py:57(trunc_elem)
     1147    0.000    0.000    0.000    0.000 custom_types.py:61(left_shift)
     1076    0.000    0.000    0.000    0.000 custom_types.py:50(set_bit)
      140    0.000    0.000    0.000    0.000 index_tricks.py:747(fill_diagonal)
     1614    0.000    0.000    0.000    0.000 shape_base.py:508(_expand_dims_dispatcher)
      140    0.000    0.000    0.000    0.000 {method 'diagonal' of 'numpy.ndarray' objects}
      538    0.000    0.000    0.000    0.000 {built-in method builtins.next}
       17    0.000    0.000    0.000    0.000 custom_types.py:91(mod_inv)
       19    0.000    0.000    0.000    0.000 {built-in method builtins.pow}
      140    0.000    0.000    0.000    0.000 index_tricks.py:743(_fill_diagonal_dispatcher)
      256    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        2    0.000    0.000    0.000    0.000 numeric.py:144(ones)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        2    0.000    0.000    0.000    0.000 mpc.py:612(<listcomp>)
        2    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        0    0.000             0.000          profile:0(profiler)