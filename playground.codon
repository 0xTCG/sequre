from numpy.create import arange
from sequre import sequre, local, Sharetensor as Stensor


@sequre
def mult3(mpc, a, b, c):
    """
    Hastings et al. mult3 benchmark expanded to series of additions and multiplications.
    """
    return a * b + b * c + a * c


@sequre
def innerprod(mpc, a, b):
    """
    Hastings et al. innerprod benchmark.
    """
    return a.dot(mpc, b, axis=0)


@sequre
def xtabs(mpc, a, b, c, d):
    """
    Hastings et al. xtabs benchmark.
    """
    
    d.get_partitions(mpc)
    cats = Stensor.range(1, 6, a.modulus)
    val = Stensor.zeros(5, a.modulus)
    broadcasted_b = b.expand_values(5).T

    for i in range(10):
        same_bin = cats == broadcasted_b[i]
        for j in range(10):
            val += (same_bin * (a[i] == c[j]) * d[j])

    return val


@sequre
def playground(mpc):
    a = Stensor.enc(mpc, arange(10))
    b = Stensor.enc(mpc, [1, 2, 1, 2, 3, 4, 3, 4, 1, 5])
    c = Stensor.enc(mpc, arange(100000))
    d = Stensor.enc(mpc, 7)
    e = Stensor.enc(mpc, 13)
    f = Stensor.enc(mpc, 19)

    print(f"CP{mpc.pid}: mult3: {mult3(mpc, d, e, f).reveal(mpc)}")
    print(f"CP{mpc.pid}: innerprod: {innerprod(mpc, c, c).reveal(mpc)}")
    print(f"CP{mpc.pid}: xtabs: {xtabs(mpc, a, b, a, b).reveal(mpc)}")


local(playground)
