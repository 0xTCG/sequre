from sequre.attributes import sequre
from sequre.types.internal import Internal as sq, Sharetensor as Stensor


@sequre
def mult3(mpc, a, b, c):
    """
    Hastings et al. mult3 benchmark expanded to series of additions and multiplications.
    """
    return a * b + b * c + a * c


@sequre
def innerprod(mpc, a, b):
    """
    Hastings et al. innerprod benchmark.
    """
    return sq.dot(mpc, a, b, axis=0)


@sequre
def xtabs(mpc, a, b, c, d):
    """
    Hastings et al. xtabs benchmark.
    """
    
    d.get_partitions(mpc)
    cats = Stensor.range(1, 6, a.modulus)
    val = Stensor.zeros(5, a.modulus)
    broadcasted_b = b.expand_values(5).T

    for i in staticrange(10):
        same_bin = cats == broadcasted_b[i]
        for j in staticrange(10):
            val += (same_bin * (a[i] == c[j]) * d[j])

    return val


@sequre
def playground(mpc, a, b, c, d, e, f, g, h):
    """
    Input params are hardcoded to:
        a = Sharetensor(mpc.comms.share_from_trusted_dealer([int_t(i) for i in range(10)], modulus), modulus)
        b = Sharetensor(mpc.comms.share_from_trusted_dealer(
            [int_t(1), int_t(2), int_t(1), int_t(2), int_t(3),
             int_t(4), int_t(3), int_t(4), int_t(1), int_t(5)], modulus), modulus)
        c = Sharetensor(mpc.comms.share_from_trusted_dealer([int_t(i) for i in range(10)], modulus), modulus)
        d = Sharetensor(mpc.comms.share_from_trusted_dealer(
            [int_t(1), int_t(2), int_t(1), int_t(2), int_t(3),
             int_t(4), int_t(3), int_t(4), int_t(1), int_t(5)], modulus), modulus)
        e = Sharetensor(mpc.comms.share_from_trusted_dealer([int_t(i) for i in range(100000)], modulus), modulus)
        f = Sharetensor(mpc.comms.share_from_trusted_dealer(int_t(7), modulus), modulus)
        g = Sharetensor(mpc.comms.share_from_trusted_dealer(int_t(13), modulus), modulus)
        h = Sharetensor(mpc.comms.share_from_trusted_dealer(int_t(19), modulus), modulus)
    """
    mult3(mpc, f, g, h)
    innerprod(mpc, e, e)
    xtabs(mpc, a, b, c, d)

    return a  # Playground is temporarily expected to return Sharetensor of list of int_t
