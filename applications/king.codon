from numpy.create import ones, array

from sequre.attributes import sequre
from sequre.types.multiparty_partition import MPP


@sequre
def collective_king_protocol(mpc, data):
    numerator = data @ data.T
    
    het = MPP.like(data, array([[row.count(1)] for row in data], dtype=float))
    dot_het = het @ ones(het.cohort_shape).T
    mask = ((dot_het - dot_het.T) > 0).astype(float)

    het_inv = MPP.like(data, array([[1 / row.count(1) / 4] for row in data]))
    dot_het_inv = het_inv @ ones(het.cohort_shape).T
    denominator = dot_het_inv * mask - dot_het_inv.T * (mask - ones(mask.shape))
    
    return numerator * denominator
