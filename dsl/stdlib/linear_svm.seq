from ..attributes import sequre_beaver
from internal import Internal as sq


@sequre_beaver
def linear_svm(mpc, X, y, eta, epochs, l1, l2, optimizer):
    assert optimizer in {'sgd', 'bgd'}, f"Invalid SVM optimizer: {optimizer}."
    is_sgd = optimizer == 'sgd'
    is_bgd = optimizer == 'bgd'
    
    w = X[0].zeros() + 1

    for i in range(epochs):
        if mpc.pid == 2: print(f'Epoch: {i + 1}/{epochs}')

        mean_grad = w.zeros()
        for feature_vector, label in zip(X, y):
            # TODO: #157 Remove bias from reularizer w
            z = sq.dot(mpc, feature_vector, w)
            grad = w * l2 * 2 - feature_vector * label * ((1 - z * label) > 0) / len(w) + l1
            if is_sgd: w = w - grad * eta
            elif is_bgd: mean_grad = mean_grad + grad
        
        if is_bgd: w = w + mean_grad / len(X) * eta

    return w


def predict(mpc, X, w):
    return sq.matmul(mpc, X, w.expand_dims().T).flatten()
