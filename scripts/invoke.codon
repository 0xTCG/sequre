import time

import sequre.utils.param as param

from sequre.runtime import client, fork_parties
from sequre.utils.utils import get_address
from sequre.utils.constants import RUN_TOGGLES

from ..tests.tests import tests
from ..tests.benchmark import benchmark

from C import unlink(str) -> int


def invoke[TP](protocol_func, pid, control_toggles, local, modulus):
    for port in param.ALL_PORTS:
        address = get_address(port)
        unlink(address)

    if local:
        fork_parties(0, 2, protocol_func, control_toggles, modulus, control_toggles, modulus)
    else:
        s = time.time()
        client(pid, protocol_func, control_toggles, local, modulus, control_toggles, modulus)
        e = time.time()
        print(f'Total client runtime: {e - s}s')


import sys
command = sys.argv[1:]
flags = [arg for arg in command if arg.startswith('--')]
args = [arg for arg in command if arg not in flags]

toggles = {toggle: toggle in flags for toggle in RUN_TOGGLES}
local = toggles[RUN_TOGGLES.LOCAL_SETUP_FLAG]
modulus = param.RING_SIZE if toggles[RUN_TOGGLES.USE_RING_FLAG] else param.FIELD_SIZE
assert local or len(args) >= 2, f"Non-local run: No CP ID provided.\n\tMake sure to add CP ID to your command {' '.join(command)} <cpid>"
pid = 0 if local else int(args[1])

supported_calls = ['run-tests', 'run-benchmarks']
match args[0]:
    case supported_calls[0]: invoke(tests, pid, toggles, local, modulus, TP=param.int_t)
    case supported_calls[1]: invoke(benchmark, pid, toggles, local, modulus, TP=param.int_t)
    case _: raise NotImplementedError(f'Invalid client call: {args[0]}. Should be in {supported_calls}')
