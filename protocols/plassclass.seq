from bio import *

fastas = ['data/opal/test.fragments.fasta']
labels = [0]

# kmer len is 5
features = [[0] * 2 ** 10] * len(labels)

def update(label_idx, kmer):
    features[label_idx][int(min(kmer, ~kmer).as_int())] += 1

for fasta_path, label in zip(fastas, labels):
    FASTA(fasta_path) |> seqs |> kmers(1, k=5) |> update(label, ...)

print(features)

# from sequre import secret_share
# secret_share(counter)

# from sequre import pool_shares, logireg
# features, labels = pool_shares()
# weights = logireg(
#     mpc, features, labels,
#     eta=0.01, epochs=10, relu_alpha=0.1, relu_beta=1)
