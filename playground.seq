from sequre.attributes import *
from sequre.stdlib.internal import Internal as sq
from sequre.stdlib.protocols import bit_add


@sequre_beaver
def xtabs(mpc, a, b, c, d):
    print('Running crosstabs benchmark ...')
    
    val = a.zeros()
    d.get_partitions(mpc)

    for i in range(10):
        for j in range(10):
            same_id = (a[i] == c[j])
            for k in range(1, 6):
                same_bin = (b[i] == k)
                val[k] += (same_id * same_bin * d[j])

    return val


@sequre_beaver
def playground(mpc, a, b, c, d):
    """
    Input params are hardcoded to:
        a = SharedTensor[list[int_t]]([int_t(1), int_t(1)], modulus)
        b = SharedTensor[list[int_t]]([int_t(2), int_t(2)], modulus)
        c = SharedTensor[list[int_t]]([int_t(3), int_t(3)], modulus)
    """
    # Toy example
    e = b * a + c * d
    f = e ** 2 * a
    g = f.reveal(mpc)
    h = g + e ** 3
    return e ** 4 * h
