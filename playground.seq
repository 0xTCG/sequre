from sequre.attributes import *
from sequre.stdlib.internal import Internal as sq
from sequre.stdlib.protocols import bit_add

@sequre_beaver
def playground(mpc, a, b, c, d):
    """
    Input params are hardcoded to:
        a = SharedTensor[list[int_t]]([int_t(1), int_t(1)], modulus)
        b = SharedTensor[list[int_t]]([int_t(2), int_t(2)], modulus)
        c = SharedTensor[list[int_t]]([int_t(3), int_t(3)], modulus)
    """
    # # Toy example
    # d = b * a + c * a
    # e = d ** 32 * a
    # f = sq.secure_reveal(mpc, e)
    # print('f', f.share)
    # g = f + d ** 16
    # h = d ** 8 * g
    # return h

    # xtabs benchmark
    val = a.zeros()
    d.get_partitions(mpc)

    for i in range(10):
        for j in range(10):
            same_id = (a[i] == c[j])
            for k in range(1, 6):
                same_bin = (b[i] == k)
                val[k] += (same_id * same_bin * d[j])

    return val
