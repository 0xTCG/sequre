# This is a basic test workflow that executes all tests

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build dependencies and test all
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Clone Seq
        run: |
          git clone https://github.com/HarisSmajlovic/seq.git
          cd seq
          git checkout feature/sequre

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-deps-${{ secrets.CACHE_VERSION }}
          restore-keys: |
            ${{ runner.os }}-deps-
            ${{ runner.os }}-

      - name: Build Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: seq/scripts/deps.sh 2
        env:
          CC: clang
          CXX: clang++
      
      - name: Pre-build setup
        run: |
          echo "LIBEXT=so" >> $GITHUB_ENV
          echo "OS_NAME=linux" >> $GITHUB_ENV
          cp -r deps seq/

      - name: Add Sequre DSL to Seq
        run: |
          mkdir seq/stdlib/sequre
          cp -r dsl/* seq/stdlib/sequre/

      - name: Build
        run: |
          cd seq
          mkdir build
          ln -s $(pwd)/deps/lib/libomp.${LIBEXT} $(pwd)/build/libomp.${LIBEXT}
          echo "SEQ_HTSLIB=$(pwd)/deps/lib/libhts.${LIBEXT}" >> $GITHUB_ENV
          (cd build && cmake .. -DCMAKE_BUILD_TYPE=Release \
                                -DSEQ_DEP=$(pwd)/../deps \
                                -DCMAKE_C_COMPILER=${CC} \
                                -DCMAKE_CXX_COMPILER=${CXX})
          cmake --build build --config Release -- VERBOSE=1
        env:
          CC: clang
          CXX: clang++
      
      - name: Run tests
        run:  seq/build/seqc run -release scripts/invoke.seq run-tests
  